pipeline {
    agent { label 'built-in' }

    tools { 
        nodejs 'node19'
    }

    environment {
        REPO_URL     = 'https://github.com/MultiiconIdeotechnology/MM_Web_Backoffice.git'
        REPO_BRANCH  = 'uat_india'
        GIT_CRED     = 'MM_PAT'

        DEPLOY_ROOT  = 'D:\\devam\\Website\\MarketMaya\\uat.backoffice.marketmaya.com'
        APP_POOL     = 'uat.backoffice.marketmaya.com'
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: env.REPO_BRANCH,
                    url: env.REPO_URL,
                    credentialsId: env.GIT_CRED
            }
        }

        stage('Check Node & NPM') {
            steps {
                script {
                    bat 'node -v'
                    bat 'npm -v'
                }
            }
        }

        stage('Install Dependencies') {
            steps {
                bat 'npm install --legacy-peer-deps'
            }
        }

        stage('Build Angular (UAT)') {
            steps {
                script {
                    echo "‚ö° Running Angular build..."
                    bat '''
                        set NODE_OPTIONS=--openssl-legacy-provider
                        npx ng build fuse --configuration uat
                    '''
                    bat '''
                        if not exist dist\\fuse (
                            echo ‚ùå Build failed: dist/fuse not found.
                            exit 1
                        )
                    '''
                }
            }
        }

        stage('Deploy to IIS') {
            steps {
                script {
                    echo "üöÄ Deploying to IIS..."
                    powershell """
                        Write-Host 'üõë Stopping App Pool: ${env.APP_POOL}'
                        Import-Module WebAdministration
                        Stop-WebAppPool -Name "${env.APP_POOL}"

                        Write-Host 'üìÇ Deploying files...'
                        Remove-Item -Recurse -Force "${env.DEPLOY_ROOT}\\*" -ErrorAction SilentlyContinue
                        Copy-Item -Recurse -Force "dist\\fuse\\*" "${env.DEPLOY_ROOT}\\"

                        Write-Host '‚ñ∂Ô∏è Starting App Pool: ${env.APP_POOL}'
                        Start-WebAppPool -Name "${env.APP_POOL}"
                    """
                }
            }
        }

        stage('Deployment Summary') {
            steps {
                script {
                    echo "üì¶ Deployment Summary:"
                    echo "   ‚û§ Branch: ${env.REPO_BRANCH}"
                    echo "   ‚û§ Deployed to: ${env.DEPLOY_ROOT}"
                    echo "   ‚û§ IIS App Pool: ${env.APP_POOL}"
                }
            }
        }
    }

    post {
        success {
            echo '‚úÖ Pipeline completed successfully and deployed to IIS!'
        }
        failure {
            echo '‚ùå Pipeline failed during build or deployment!'
        }
        always {
            echo '‚ôªÔ∏è Pipeline execution finished.'
        }
    }
}
